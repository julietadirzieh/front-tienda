{
  "version": 3,
  "sources": ["../../react-headless-tabs/src/TabPanel.tsx", "../../react-headless-tabs/src/useTabs.ts"],
  "sourcesContent": ["import * as React from \"react\";\n\nfunction wait(fn: () => void, ms?: number): () => void {\n  if (!ms && \"requestIdleCallback\" in window) {\n    const ref = requestIdleCallback(fn);\n\n    return () => cancelIdleCallback(ref);\n  }\n\n  const ref = setTimeout(fn, ms);\n\n  return () => clearTimeout(ref);\n}\n\nexport function TabPanel({\n  children,\n  render = \"idle\",\n  unmount = \"never\",\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & {\n  hidden: boolean;\n} & (\n    | {\n        render?: \"idle\";\n        unmount?: \"never\" | number;\n      }\n    | {\n        render?: \"lazy\";\n        unmount?: \"idle\" | \"never\" | number;\n      }\n  )) {\n  const [shouldRender, setShouldRender] = React.useState(!props.hidden);\n\n  const renderRef = React.useRef<() => void>();\n  const unmountRef = React.useRef<() => void>();\n\n  React.useEffect(() => {\n    if (!props.hidden) {\n      setShouldRender(true);\n    } else if (render === \"idle\") {\n      renderRef.current = wait(() => setShouldRender(true));\n    } else if (unmount === \"idle\") {\n      unmountRef.current = wait(() => setShouldRender(false));\n    }\n\n    if (typeof unmount === \"number\") {\n      unmountRef.current = wait(\n        () => setShouldRender(!props.hidden),\n        unmount * 1000\n      );\n    }\n\n    return () => {\n      renderRef.current?.();\n      renderRef.current = undefined;\n      unmountRef.current?.();\n      unmountRef.current = undefined;\n    };\n  }, [props.hidden, render, unmount]);\n\n  return <div {...props}>{shouldRender ? children : null}</div>;\n}\n", "import * as React from \"react\";\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef<T>();\n\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n\nexport function useTabs<K extends string>(\n  tabs: K[],\n  defaultTab: K | null | undefined = tabs.at(0)\n) {\n  const state = React.useState(defaultTab);\n  const [selectedTab, setSelectedTab] = state;\n\n  const activeIndex = React.useMemo(() => {\n    if (selectedTab) {\n      return tabs.indexOf(selectedTab);\n    }\n\n    return -1;\n  }, [selectedTab, tabs]);\n\n  const previousActiveIndex = usePrevious(activeIndex);\n\n  React.useEffect(() => {\n    if (tabs.length === 0) {\n      setSelectedTab(undefined);\n\n      return;\n    }\n\n    if (selectedTab === null || (selectedTab && tabs.includes(selectedTab))) {\n      return;\n    }\n\n    if (\n      typeof previousActiveIndex === \"number\" &&\n      previousActiveIndex >= 0 &&\n      (tabs[previousActiveIndex] || tabs[previousActiveIndex - 1])\n    ) {\n      setSelectedTab(\n        tabs[previousActiveIndex] || tabs[previousActiveIndex - 1]\n      );\n\n      return;\n    }\n\n    if (defaultTab === null) {\n      return;\n    }\n\n    setSelectedTab(\n      defaultTab && tabs.includes(defaultTab) ? defaultTab : tabs[0]\n    );\n  }, [defaultTab, previousActiveIndex, selectedTab, setSelectedTab, tabs]);\n\n  return state;\n}\n"],
  "mappings": ";;;;;;;;AAAA,QAAuB;ACAvB,QAAuB;ADEvB,SAASA,EAAKC,GAAgBC,GAAyB;AACrD,MAAI,CAACA,KAAM,yBAAyB,QAAQ;AAC1C,QAAMC,IAAM,oBAAoBF,CAAE;AAElC,WAAO,MAAM,mBAAmBE,CAAG;EACrC;AAEA,MAAMA,IAAM,WAAWF,GAAIC,CAAE;AAE7B,SAAO,MAAM,aAAaC,CAAG;AAC/B;AAEO,SAASC,EAAS,EACvB,UAAAC,GACA,QAAAC,IAAS,QACT,SAAAC,IAAU,SAAA,GACPC,EACL,GAWK;AACH,MAAM,CAACC,GAAcC,CAAe,IAAU,WAAS,CAACF,EAAM,MAAM,GAE9DG,IAAkB,SAAmB,GACrCC,IAAmB,SAAmB;AAE5C,SAAM,YAAU,OACTJ,EAAM,SAEAF,MAAW,SACpBK,EAAU,UAAUX,EAAK,MAAMU,EAAgB,IAAI,CAAC,IAC3CH,MAAY,WACrBK,EAAW,UAAUZ,EAAK,MAAMU,EAAgB,KAAK,CAAC,KAJtDA,EAAgB,IAAI,GAOlB,OAAOH,KAAY,aACrBK,EAAW,UAAUZ,EACnB,MAAMU,EAAgB,CAACF,EAAM,MAAM,GACnCD,IAAU,GACZ,IAGK,MAAM;AApDjB;AAqDMI,YAAU,YAAVA,4BACAA,EAAU,UAAU,SACpBC,OAAW,YAAXA,4BACAA,EAAW,UAAU;EACvB,IACC,CAACJ,EAAM,QAAQF,GAAQC,CAAO,CAAC,GAE3B,gBAAC,OAAA,EAAK,GAAGC,EAAAA,GAAQC,IAAeJ,IAAW,IAAK;AACzD;AC3DA,SAASQ,EAAeC,GAAU;AAChC,MAAMX,IAAY,SAAU;AAE5B,SAAM,YAAU,MAAM;AACpBA,MAAI,UAAUW;EAChB,CAAC,GAEMX,EAAI;AACb;AAEO,SAASY,EACdC,GACAC,IAAmCD,EAAK,GAAG,CAAC,GAC5C;AACA,MAAME,IAAc,WAASD,CAAU,GACjC,CAACE,GAAaC,CAAc,IAAIF,GAEhCG,IAAoB,UAAQ,MAC5BF,IACKH,EAAK,QAAQG,CAAW,IAG1B,IACN,CAACA,GAAaH,CAAI,CAAC,GAEhBM,IAAsBT,EAAYQ,CAAW;AAEnD,SAAM,YAAU,MAAM;AACpB,QAAIL,EAAK,WAAW,GAAG;AACrBI,QAAe,MAAS;AAExB;IACF;AAEA,QAAI,EAAAD,MAAgB,QAASA,KAAeH,EAAK,SAASG,CAAW,IAIrE;AAAA,UACE,OAAOG,KAAwB,YAC/BA,KAAuB,MACtBN,EAAKM,CAAAA,KAAwBN,EAAKM,IAAsB,CAAA,IACzD;AACAF,UACEJ,EAAKM,CAAAA,KAAwBN,EAAKM,IAAsB,CAAA,CAC1D;AAEA;MACF;AAEIL,YAAe,QAInBG,EACEH,KAAcD,EAAK,SAASC,CAAU,IAAIA,IAAaD,EAAK,CAAA,CAC9D;IAAA;EACF,GAAG,CAACC,GAAYK,GAAqBH,GAAaC,GAAgBJ,CAAI,CAAC,GAEhEE;AACT;",
  "names": ["wait", "fn", "ms", "ref", "TabPanel", "children", "render", "unmount", "props", "shouldRender", "setShouldRender", "renderRef", "unmountRef", "usePrevious", "value", "useTabs", "tabs", "defaultTab", "state", "selectedTab", "setSelectedTab", "activeIndex", "previousActiveIndex"]
}
